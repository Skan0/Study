변수 
- 대입연산자(=)
	좌변에 우변의 값을 넣는다

메모리 영역이란
	스택 영역
	힙 영역
값 형식은 스택에 할당 {}를 벗어나면 해제
참조 형식은 힙에 할당 참조하는 위치 값이 삭제되면 가비지 컬렉터에 의해 해제
스택은 짧고 힙은 길다

정수형
모든 정수 숫자 형식은 값 형식이다. 리터럴로 초기화할 수 있다

부동소수점 형식의 특성
float		4byte
double	8byte
decimal	16byte

const int와 같이 선언을 하게 되면 값이 더이상 변하지 않는다

enum 식별자로 변수 선언가능하고, 또한 enum변수값은 기존 enum값으로 제한이 가능

var 어떤 데이터 간에 너를 대변해줄수 있어
var은 클래스 멤버 변수로는 사용불가능하다

운영체제마다 다른 코드를 사용하는데 (?)를 출력하는것은 사용할수 없는 아스키코드를 의미한다

Console.WriteLine("{0:D}, {0:D8}", num); 에서 D뒤의 수가 변수의 문자수보다 많으면 0으로 채워주고 적으면 변수를 다 출력한다
Console.WriteLine("{0}, {0:F}, {0:F3}, {0:F10}", fNum);//0:F@ @가 소수점뒤의 숫자 수를 정한다
Console.WriteLine("{0}, {0:E}, {0:E2}", dNum);//0:E@ 뒤에서 부터 @개의 수들을 E+0으로 바꾼다
Console.WriteLine("0x{0:X}", num);//16진수의 값을 나타낸다.
Console.WriteLine("{0:C3}, {1} ", num, num.ToString("C"));//각나라의 재화 값으로 나타낸다
Console.WriteLine("{0:N}, {0:N1 }, {0:N3} ", num);//N은 기본적으로 소수점 2개 
Console.WriteLine("{0:P}, {0:P1}, {0:P0}", num);//재화의 값을 변경할 때




